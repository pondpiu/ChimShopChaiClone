{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","css","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gLAAAA,EAAOC,QAAU,IAA0B,kC,uhDCM3C,IAqJeC,EArJH,WACV,OACE,mBAAKC,UAAU,OACb,sBACEC,IAAKA,YAAF,MAOH,2KACA,uIACA,wIAEF,8BAEE,mBACEA,IAAKA,YAAF,MASH,mBAAKC,IAAI,yBAAyBC,IAAI,gBACtC,mBAAKD,IAAI,2BAA2BC,IAAI,kBACxC,mBAAKD,IAAI,0BAA0BC,IAAI,kBAEzC,8BAEE,yGACA,mEACA,sGACkB,uBADlB,uNAE2D,uBAF3D,uSAKA,2KAC2B,uBAD3B,6HAIA,61BAGsD,uBAHtD,utBAQA,sLAEE,6QAC+C,uBAD/C,2RAEyD,uBAFzD,kbAOJ,mBACEF,IAAKA,YAAF,MAQH,mBAAKC,IAAI,6BACT,mBAAKA,IAAI,6BACT,mBAAKA,IAAI,sCAEX,mBACED,IAAKA,YAAF,MAQH,mBAAKC,IAAI,mBACT,mBAAKA,IAAI,mBACT,mBAAKA,IAAI,mBACT,mBAAKA,IAAI,yBACT,mBAAKA,IAAI,oBACT,mBAAKA,IAAI,qBAGb,gCAEE,mBACED,IAAKA,YAAF,MAQH,uBACE,mBACEA,IAAKA,YAAF,KAGHC,IAAI,uBAGR,8JAEE,sfAKF,4LAEE,yTAIF,8JAEE,0GAGJ,mBACED,IAAKA,YAAF,MAUH,gDACA,2KACA,iLACA,yNCxIUG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8d92704e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header\n        css={css`\n          color: blue;\n          display: flex;\n          justify-content: center;\n          background-color: green;\n        `}\n      >\n        <div>ลงทะเบียนเข้าร่วมโครงการ</div>\n        <div>ขั้นตอนการเข้าร่วม</div>\n        <div>ร้านค้าที่เข้าร่วม</div>\n      </header>\n      <div>\n        body\n        <div\n          css={css`\n            display: flex;\n            justify-content: center;\n            height: 20em;\n            img {\n              flex: 1;\n            }\n          `}\n        >\n          <img src=\"./chim/banner-left.png\" alt=\"banner-left\" />\n          <img src=\"./chim/banner-center.png\" alt=\"banner-center\" />\n          <img src=\"./chim/banner-right.png\" alt=\"banner-right\" />\n        </div>\n        <div>\n          MAIN\n          <div>ตั้งแต่วันที่</div>\n          <div>27 ก.ย. - 31 ธ.ค. 62</div>\n          <div>\n            ลงทะเบียน เฟส 2 <br />\n            ตั้งแต่วันที่ 24 ต.ค. วันละ 2 รอบ เวลา 6.00 และ 18.00 น. <br />\n            (จำกัดจำนวนผู้ลงทะเบียนรอบละ 5 แสนคน รวม 1 ล้ายคนต่อวัน)\n          </div>\n          <div>\n            มาตรการส่งเสริมการบริโภค <br />\n            ในประเทศ “ชิมช้อปใช้”\n          </div>\n          <div>\n            ผู้สนใจเข้าร่วมมาตรการส่งเสริมการบริโภคในประเทศ “ชิมช้อปใช้”\n            รับเงินผ่าน “เป๋าตัง” (G-Wallet) รวมจำนวน 13 ล้านคน\n            ลงทะเบียนรับสิทธิ ได้ทางเว็บไซต์ www.ชิมช้อปใช้.com <br />\n            ตั้งแต่วันที่ 23 กันยายน - 15 พฤศจิกายน 2562 (รับลงทะเบียน เฟส 2\n            ตั้งแต่วันที่ 24 ตุลาคม 2562 จำกัดจำนวนผู้ลงทะเบียน 1 ล้านคนต่อวัน\n            จนกว่าจะครบ 3 ล้านคน)\n          </div>\n          <div>\n            เงื่อนไขการเข้าร่วมมาตรการ\n            <p>\n              1. เป็นบุคคลสัญชาติไทย มีบัตรประจำตัวประชาชน <br />\n              2. มีอายุตั้งแต่ 18 ปีบริบูรณ์ขึ้นไป ณ วันที่ลงทะเบียน <br />\n              3.มีโทรศัพท์มือถือสมาร์ทโฟนที่สามารถเชื่อมต่อสัญญาณอินเทอร์เน็ตและมีอีเมล\n            </p>\n          </div>\n        </div>\n        <div\n          css={css`\n            display: flex;\n            justify-content: center;\n            img {\n              width: 200px;\n            }\n          `}\n        >\n          <img src=\"./chim/Banner_KTB_SQ.png\" />\n          <img src=\"./chim/Banner_CGD_Sq.png\" />\n          <img src=\"./chim/Banner_TAT_Hotline_Sq.png\" />\n        </div>\n        <div\n          css={css`\n            display: flex;\n            justify-content: center;\n            img {\n              width: 80px;\n            }\n          `}\n        >\n          <img src=\"./chim/MOF.png\" />\n          <img src=\"./chim/FPO.png\" />\n          <img src=\"./chim/CGD.png\" />\n          <img src=\"./chim/Krungthai.png\" />\n          <img src=\"./chim/MOTS.png\" />\n          <img src=\"./chim/TAT.png\" />\n        </div>\n      </div>\n      <div>\n        Footer\n        <div\n          css={css`\n            background: #fafafa;\n            display: flex;\n            div {\n              flex: 1;\n            }\n          `}\n        >\n          <div>\n            <img\n              css={css`\n                width: 100px;\n              `}\n              src=\"./chim/banner.png\"\n            />\n          </div>\n          <div>\n            ข้อมูลลงทะเบียนประชาชน\n            <p>\n              การรับสิทธิ การใช้งานแอปพลิเคชั่น “เป๋าตัง” และ “ถุงเงิน” ติดต่อ\n              ชิมช้อปใช้ Call Center by Krungthai โทร.0 2111 1144\n            </p>\n          </div>\n          <div>\n            ข้อมูลลงทะเบียนผู้ประกอบการ\n            <p>\n              เงื่อนไขและวิธีการเข้าร่วมมาตรการฯ ติดต่อ โทร.0 2270 6400 กด 7\n            </p>\n          </div>\n          <div>\n            ข้อมูลเที่ยวชิมช้อปใช้\n            <p>ติดต่อ ททท. โทร1672</p>\n          </div>\n        </div>\n        <div\n          css={css`\n            background: #213a8f;\n            color: white;\n            display: flex;\n            justify-content: center;\n            div {\n              flex: 1;\n            }\n          `}\n        >\n          <div>Copyright @ 2003-2019</div>\n          <div>ลงทะเบียนเข้าร่วมโครงการ</div>\n          <div>ขั้นตอนการเข้าร่วมทั้งหมด</div>\n          <div>รายชื่อร้านค้าที่เข้าร่วมรายการ</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}